【复习】
1. 函数
	格式： 
	返回类型  函数名 (形参表){
		函数体;
	}
2. 结构体 : 自定义数据类型
		
	struct ： 结构体 
	数组：  
		
	union ： 联合体

	enum ：枚举  标准数据类型

3. 百度AI语音识别
	1> 注册百度AI语音识别的账号
	2> 创建百度AI语音识别的应用
	3> 下载百度AI语音识别的应用程序
		rest-api-asr 包含 
			c java python ....
	4> 修改语音识别的c代码的应用程序
		让应用程序和自己的百度AI语音识别的应用进行绑定
	5> 编译和运行应用程序
		sh build_and_asr.sh
		
		build_and_asr.sh使用的是shell脚本语言

4. 录制音频的命令
	arecord  -D  "plughw:0,0"  -f  S16_LE  -r  16000  -d  5  -t  wav  smart.wav

5. 播放音频的命令
	aplay  smart.wav


####################################################################

语音合成的代码修改练习时间到10:20

由于网络原因部分学员无法进入直播间，

先预习一下以下几个函数的的使用,
下节课咱们讲解一下以下几个函数的使用
	fopen / fclose 
	fread / fwrite 
	fputs / fgets
	
【1】fopen函数的用法
	终端执行命令：man 3 fopen，可以查看fopen函数的使用帮助手册 
	
	#include <stdio.h>
	FILE *fopen(const char *path, const char *mode);
	/****************************************************************
	*	功能：打开一个文件，返回FILE*类型的流指针(FILE是一个系统定义的结构体类型)
	*	参数：@path 指定文件路径 相对路径/绝对路径
	*		  @mode 指定文件打开的模式
	*			r:  以读的方式打开一个文件，同时流指针指向文件开头
	*			r+: 以读写的方式打开一个文件，同时流指针指向文件开头
	*			w:	以写的方式打开一个文件，如果文件存在清空，如果不存在创建文件，
	*					同时流指针指向文件开头
	*			w+: 以读写的方式打开一个文件，如果文件存在清空，如果不存在创建文件，
	*					同时流指针指向文件开头
	*			a： 以写的方式打开一个文件，如果不存在创建文件，如果文件存在以追加方式写，
	*					同时流指针指向文件结尾
	*			a+: 以读写的方式打开一个文件，如果不存在创建文件，如果文件存在读流指针在
	*					文件开头，写流指针在文件结尾(追加方式写)
	*
	*	返回值： FILE * 
	*			成功返回打开文件的流指针  FILE *(FILE pointer)
	*			失败返回 NULL， 并且设置错误码 errno
	*****************************************************************/		
【2】fclose函数
	#include <stdio.h>
	int fclose(FILE *fp);
	/*******************
	* 函数的功能：关闭文件
	* 函数参数： 
	*	fp ： 要关闭的文件的流指针
	* 返回值： 
	* 	成功：返回0
	*   失败：返回EOF错误码 ，返回-1;
	********************/	

【3】fgets函数
	#include <stdio.h>
	char *fgets(char *s, int size, FILE *stream);
	/**************************************
	*功能：从指定流中读取一个字符串
	*参数：@s:       把从文件流中获取的一个字符串存储到s中
	*      @size:    要从文件中读 size - 1 个字符，
	* 				 读取的字符结尾最自动填充一个字符'\0'。
	*				 如果一行不够 size - 1 个字符了，
	*				 就不会再读下一行了
	*	   @stream:  文件流指针
	*返回值:  成功  返回 s指针
	*		  失败  返回 NULL(0地址)
	****************************************/
	

【4】fputs函数
	#include <stdio.h>
	int fputs(const char *s, FILE *stream);
	/**************************************
	*功能：写一个字符串到指定文件流中
	*参数：@s: 将要写到流文件中的字符串首地址
	*	   @stream:  输出到指定文件流
	*返回值:  成功  返回 大于0的
	*		  失败  返回 EOF(-1)
	****************************************/


【5】fwrite函数  --》 对二进制文件的写函数
	#include <stdio.h>
	size_t fwrite(const void *ptr, size_t size, size_t nmemb,
						 FILE *stream);
	/*********************************************
	*功能： 写数据到指定的文件中
	*参数:  @ptr    要写的数据保存在内存的哪个地址中
	*		@size	数据元素的大小，以字节为单位
	*		@nmemb  数据元素的个数
	*		@stream 文件流
	*返回值: 
	* 		成功:  返回写入文件中元素的个数 (nmemb)
	*		失败:  返回值小于nmemb数或者等于0
	**********************************************/
	
	int buf[10] = {1,2,3,4,5,6,7,8,9,10};
	fwrite(buf, 4, 10,fp);

【6】fread函数   --》 对二进制文件的读函数
	#include <stdio.h>
	size_t fread(void *ptr, size_t size, size_t nmemb, 
						FILE *stream);
	/*********************************************
	*功能： 从指定的文件中读数据
	*参数:  @ptr    要写的数据保存在内存的那个地址中
	*		@size	数据元素的大小
	*		@nmemb  数据元素的个数
	*		@stream 文件流
	*返回值: 
	* 		成功:  返回从文件中读入元素的个数 (nmemb)
	*		失败:  返回值小于nmemb数或者等于0
	**********************************************/
	int buf[10] = {0};
	fwrite(buf, 4, 10,fp);

【7】strstr函数
	#include <string.h>
    char *strstr(const char *haystack, const char *needle);

	/***********************
	函数功能： 从母字符串中搜索子字符串
	参数： 
		haystack：母字符串的首地址
		needle：子字符串的首地址
	返回值： 
		成功： 返回子字符串在母字符串的首地址
		失败：返回NULL
		
	**********************/
练习时间30分钟。










